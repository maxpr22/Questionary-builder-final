{"mappings":"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","sources":["<anon>","src/onload.js","funcs/sort.js","src/server/delete.js"],"sourcesContent":["import \"./edit.446baefd.js\";\nimport \"./questionary-builder.32dc0967.js\";\nimport \"./Questionary-builder-final.2a43680d.js\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $jMsY1 = parcelRequire(\"jMsY1\");\n\nvar $kcAQ0 = parcelRequire(\"kcAQ0\");\nfunction $c1391a13c718eeda$export$36be7b3713d792c7(sortType) {\n    let tests = Array.from(document.querySelectorAll('.test-card'));\n    tests.sort((a, b)=>{\n        let aValue, bValue;\n        switch(sortType){\n            case 'time':\n                aValue = new Date(a.getAttribute('data-created-at')).getTime();\n                bValue = new Date(b.getAttribute('data-created-at')).getTime();\n                return bValue - aValue;\n            case 'name':\n                aValue = a.querySelector('h2').textContent.toLowerCase();\n                bValue = b.querySelector('h2').textContent.toLowerCase();\n                return aValue.localeCompare(bValue);\n            case 'questions':\n                aValue = parseInt(a.querySelector('.test-info').textContent.split(' ')[0]);\n                bValue = parseInt(b.querySelector('.test-info').textContent.split(' ')[0]);\n                return bValue - aValue;\n            case 'completions':\n                aValue = parseInt(a.querySelector('.test-info').textContent.split(' ')[4]);\n                bValue = parseInt(b.querySelector('.test-info').textContent.split(' ')[4]);\n                return bValue - aValue;\n            default:\n                return 0;\n        }\n    });\n    const testList = document.querySelector('.test-list');\n    testList.innerHTML = '';\n    tests.forEach((test)=>testList.appendChild(test));\n}\n\n\n\nvar $nuyhG = parcelRequire(\"nuyhG\");\n\nvar $5a6Bh = parcelRequire(\"5a6Bh\");\nconst $d56ecc719ccee681$export$4bf293941e646ec1 = async (testId)=>{\n    try {\n        const { data: attempts, error: attemptsError } = await (0, $nuyhG.supabase).from('test_attempts').select('id').eq('test_id', testId);\n        if (attemptsError) throw attemptsError;\n        const attemptIds = attempts.map((a)=>a.id);\n        if (attemptIds.length > 0) {\n            await (0, $nuyhG.supabase).from('question_answers').delete().in('attempt_id', attemptIds);\n            await (0, $nuyhG.supabase).from('test_attempts').delete().eq('test_id', testId);\n        }\n        const { data: questions, error: questionsError } = await (0, $nuyhG.supabase).from('questions').select('id').eq('test_id', testId);\n        if (questionsError) throw questionsError;\n        const questionIds = questions.map((q)=>q.id);\n        if (questionIds.length > 0) {\n            await (0, $nuyhG.supabase).from('answers').delete().in('question_id', questionIds);\n            await (0, $nuyhG.supabase).from('questions').delete().eq('test_id', testId);\n        }\n        await (0, $nuyhG.supabase).from('tests').delete().eq('id', testId);\n        (0, (/*@__PURE__*/$parcel$interopDefault($5a6Bh))).Notify.success(\"\\u0422\\u0435\\u0441\\u0442 \\u0431\\u044B\\u043B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0443\\u0434\\u0430\\u043B\\u0451\\u043D\");\n        window.location.reload();\n    } catch (error) {\n        (0, (/*@__PURE__*/$parcel$interopDefault($5a6Bh))).Notify.failure(`\\u{41E}\\u{448}\\u{438}\\u{431}\\u{43A}\\u{430} \\u{43F}\\u{440}\\u{438} \\u{443}\\u{434}\\u{430}\\u{43B}\\u{435}\\u{43D}\\u{438}\\u{438} \\u{442}\\u{435}\\u{441}\\u{442}\\u{430}: ${error.message}`);\n    }\n};\n\n\nconst $63fb39a13cad62be$var$refs = {\n    testList: document.querySelector('.test-list'),\n    target: document.querySelector('.js-guard')\n};\nlet $63fb39a13cad62be$var$currentPage = 1;\nconst $63fb39a13cad62be$var$pageSize = 9;\nlet $63fb39a13cad62be$var$hasMore = true;\nlet $63fb39a13cad62be$var$options = {\n    root: document.querySelector('#scrollArea'),\n    rootMargin: '200px',\n    threshold: 1.0\n};\nlet $63fb39a13cad62be$var$observer = new IntersectionObserver($63fb39a13cad62be$var$onLoad, $63fb39a13cad62be$var$options);\nasync function $63fb39a13cad62be$var$onLoad(entries) {\n    for (const entry of entries){\n        if (entry.isIntersecting && $63fb39a13cad62be$var$hasMore) try {\n            const tests = await (0, $jMsY1.loadTests)($63fb39a13cad62be$var$currentPage, 9);\n            if (tests.length < 9) {\n                $63fb39a13cad62be$var$refs.testList.insertAdjacentHTML('beforeend', $63fb39a13cad62be$var$createCatalogMarkup(tests));\n                (0, $c1391a13c718eeda$export$36be7b3713d792c7)($63fb39a13cad62be$var$sortSelect.value);\n                $63fb39a13cad62be$var$hasMore = false;\n                $63fb39a13cad62be$var$createDropdownMenu();\n                $63fb39a13cad62be$var$observer.unobserve($63fb39a13cad62be$var$refs.target);\n                return;\n            }\n            $63fb39a13cad62be$var$refs.testList.insertAdjacentHTML('beforeend', $63fb39a13cad62be$var$createCatalogMarkup(tests));\n            $63fb39a13cad62be$var$currentPage++;\n            $63fb39a13cad62be$var$createDropdownMenu();\n            (0, $c1391a13c718eeda$export$36be7b3713d792c7)($63fb39a13cad62be$var$sortSelect.value);\n        } catch (error) {\n            console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0442\\u0435\\u0441\\u0442\\u0456\\u0432:\", error);\n        }\n    }\n}\nfunction $63fb39a13cad62be$var$onMenuButtonClick(evt) {\n    evt.stopPropagation();\n    document.querySelectorAll('.menu-container').forEach((menu)=>{\n        menu.classList.remove('active');\n    });\n    const menuContainer = evt.target.parentElement;\n    menuContainer.classList.toggle('active');\n}\nfunction $63fb39a13cad62be$var$closeDropdownMenu(evt) {\n    if (!evt.target.closest('.menu-container')) document.querySelectorAll('.menu-container').forEach((menu)=>{\n        menu.classList.remove('active');\n    });\n}\ndocument.addEventListener('click', $63fb39a13cad62be$var$closeDropdownMenu);\nfunction $63fb39a13cad62be$var$createDropdownMenu() {\n    document.querySelectorAll('.menu-button').forEach((button)=>{\n        button.addEventListener('click', $63fb39a13cad62be$var$onMenuButtonClick);\n    });\n}\nfunction $63fb39a13cad62be$var$createCatalogMarkup(tests) {\n    (0, $c1391a13c718eeda$export$36be7b3713d792c7)($63fb39a13cad62be$var$sortSelect.value);\n    return tests.map(({ id: id, title: title, description: description, count_questions: count_questions, completed: completed, created_at: created_at })=>` <li class=\"test-card\" data-created-at=\"${created_at}\">\n            <div class=\"card-content-wrapper\">\n            <div class=\"test-header\">\n                <h2 class = \"test-title\">${title ? title : `\\u{422}\\u{435}\\u{441}\\u{442} #${id}`}</h2>\n                <div class=\"menu-container\">\n                    <button class=\"menu-button\">\\u{22EE}</button>\n                    <div class=\"dropdown-menu\">\n                        <button class=\"edit\"><a class = \"start-link\" href=\"/edit.html?test_id=${id}\">\\u{420}\\u{435}\\u{434}\\u{430}\\u{433}\\u{443}\\u{432}\\u{430}\\u{442}\\u{438}</a></button>\n                        <button class=\"delete\"onClick=\"deleteTest(${id})\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\n                        <button class=\"continue\"><a class = \"start-link\" href=\"/walkthrough.html?test_id=${id}\">\\u{41F}\\u{440}\\u{43E}\\u{434}\\u{43E}\\u{432}\\u{436}\\u{438}\\u{442}\\u{438}</a></button>\n                    </div>\n                </div>\n            </div>\n            <p class = \"test-description\">${description}</p>\n            <p class=\"test-info\">${count_questions} \\u{43F}\\u{438}\\u{442}\\u{430}\\u{43D}\\u{44C} \\u{2022} \\u{41F}\\u{440}\\u{43E}\\u{439}\\u{434}\\u{435}\\u{43D}\\u{43E} ${completed} \\u{440}\\u{430}\\u{437}\\u{456}\\u{432}</p>\n            <p>${(0, $kcAQ0.timeSince)(created_at)}</p>\n            </div>\n            <div class=\"test-actions\">\n                <a class=\"start\" href=\"/walkthrough.html?test_id=${id}\">\\u{417}\\u{430}\\u{43F}\\u{443}\\u{441}\\u{442}\\u{438}\\u{442}\\u{438}</a>\n            </div>\n        </li>`).join('');\n}\ndocument.addEventListener('DOMContentLoaded', async function() {\n    const tests = await (0, $jMsY1.loadTests)($63fb39a13cad62be$var$currentPage, $63fb39a13cad62be$var$pageSize);\n    $63fb39a13cad62be$var$refs.testList.insertAdjacentHTML('beforeend', $63fb39a13cad62be$var$createCatalogMarkup(tests));\n    $63fb39a13cad62be$var$observer.observe($63fb39a13cad62be$var$refs.target);\n    $63fb39a13cad62be$var$createDropdownMenu();\n    $63fb39a13cad62be$var$currentPage++;\n});\nconst $63fb39a13cad62be$var$sortSelect = document.getElementById('sort-type');\n$63fb39a13cad62be$var$sortSelect.addEventListener('change', (event)=>{\n    (0, $c1391a13c718eeda$export$36be7b3713d792c7)(event.target.value);\n    (0, $c1391a13c718eeda$export$36be7b3713d792c7)();\n});\nwindow.deleteTest = (0, $d56ecc719ccee681$export$4bf293941e646ec1); //Я не джин 🐷, я джун. Сделать не успеваю\n\n\n//# sourceMappingURL=Questionary-builder-final.99ffaf2e.js.map\n","import { loadTests } from '../funcs/loadTests';\nimport { timeSince } from '../funcs/timeSpend';\nimport { sortTests } from '../funcs/sort';\nimport { deleteTest } from './server/delete';\n\nconst refs = {\n  testList: document.querySelector('.test-list'),\n  target: document.querySelector('.js-guard'),\n};\n\nlet currentPage = 1;\nconst pageSize = 9;\nlet hasMore = true;\n\nlet options = {\n  root: document.querySelector('#scrollArea'),\n  rootMargin: '200px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoad, options);\n\nasync function onLoad(entries) {\n  for (const entry of entries) {\n    if (entry.isIntersecting && hasMore) {\n      try {\n        const tests = await loadTests(currentPage, 9);\n\n        if (tests.length < 9) {\n          refs.testList.insertAdjacentHTML(\n            'beforeend',\n            createCatalogMarkup(tests)\n          );\n          sortTests(sortSelect.value);\n          hasMore = false;\n          createDropdownMenu();\n          observer.unobserve(refs.target);\n          return;\n        }\n\n        refs.testList.insertAdjacentHTML(\n          'beforeend',\n          createCatalogMarkup(tests)\n        );\n        currentPage++;\n        createDropdownMenu();\n        sortTests(sortSelect.value);\n      } catch (error) {\n        console.error('Помилка завантаження тестів:', error);\n      }\n    }\n  }\n}\n\nfunction onMenuButtonClick(evt) {\n  evt.stopPropagation();\n  document.querySelectorAll('.menu-container').forEach(menu => {\n    menu.classList.remove('active');\n  });\n  const menuContainer = evt.target.parentElement;\n  menuContainer.classList.toggle('active');\n}\nfunction closeDropdownMenu(evt) {\n  if (!evt.target.closest('.menu-container')) {\n    document.querySelectorAll('.menu-container').forEach(menu => {\n      menu.classList.remove('active');\n    });\n  }\n}\ndocument.addEventListener('click', closeDropdownMenu);\n\nfunction createDropdownMenu() {\n  document.querySelectorAll('.menu-button').forEach(button => {\n    button.addEventListener('click', onMenuButtonClick);\n  });\n}\n\nfunction createCatalogMarkup(tests) {\n  sortTests(sortSelect.value);\n  return tests\n    .map(\n      ({\n        id,\n        title,\n        description,\n        count_questions,\n        completed,\n        created_at,\n      }) => ` <li class=\"test-card\" data-created-at=\"${created_at}\">\n            <div class=\"card-content-wrapper\">\n            <div class=\"test-header\">\n                <h2 class = \"test-title\">${title ? title : `Тест #${id}`}</h2>\n                <div class=\"menu-container\">\n                    <button class=\"menu-button\">⋮</button>\n                    <div class=\"dropdown-menu\">\n                        <button class=\"edit\"><a class = \"start-link\" href=\"/edit.html?test_id=${id}\">Редагувати</a></button>\n                        <button class=\"delete\"onClick=\"deleteTest(${id})\">Видалити</button>\n                        <button class=\"continue\"><a class = \"start-link\" href=\"/walkthrough.html?test_id=${id}\">Продовжити</a></button>\n                    </div>\n                </div>\n            </div>\n            <p class = \"test-description\">${description}</p>\n            <p class=\"test-info\">${count_questions} питань • Пройдено ${completed} разів</p>\n            <p>${timeSince(created_at)}</p>\n            </div>\n            <div class=\"test-actions\">\n                <a class=\"start\" href=\"/walkthrough.html?test_id=${id}\">Запустити</a>\n            </div>\n        </li>`\n    )\n    .join('');\n}\n\ndocument.addEventListener('DOMContentLoaded', async function () {\n  const tests = await loadTests(currentPage, pageSize);\n  refs.testList.insertAdjacentHTML('beforeend', createCatalogMarkup(tests));\n  observer.observe(refs.target);\n  createDropdownMenu();\n  currentPage++;\n});\n\nconst sortSelect = document.getElementById('sort-type');\nsortSelect.addEventListener('change', event => {\n  sortTests(event.target.value);\n  sortTests();\n});\n\nwindow.deleteTest = deleteTest;\n\n//Я не джин 🐷, я джун. Сделать не успеваю\n","export function sortTests(sortType) {\n  let tests = Array.from(document.querySelectorAll('.test-card'));\n\n  tests.sort((a, b) => {\n    let aValue, bValue;\n\n    switch (sortType) {\n      case 'time':\n        aValue = new Date(a.getAttribute('data-created-at')).getTime();\n        bValue = new Date(b.getAttribute('data-created-at')).getTime();\n\n        return bValue - aValue;\n\n      case 'name':\n        aValue = a.querySelector('h2').textContent.toLowerCase();\n        bValue = b.querySelector('h2').textContent.toLowerCase();\n        return aValue.localeCompare(bValue);\n\n      case 'questions':\n        aValue = parseInt(\n          a.querySelector('.test-info').textContent.split(' ')[0]\n        );\n        bValue = parseInt(\n          b.querySelector('.test-info').textContent.split(' ')[0]\n        );\n        return bValue - aValue;\n\n      case 'completions':\n        aValue = parseInt(\n          a.querySelector('.test-info').textContent.split(' ')[4]\n        );\n        bValue = parseInt(\n          b.querySelector('.test-info').textContent.split(' ')[4]\n        );\n        return bValue - aValue;\n\n      default:\n        return 0;\n    }\n  });\n\n  const testList = document.querySelector('.test-list');\n  testList.innerHTML = '';\n  tests.forEach(test => testList.appendChild(test));\n}\n","import { supabase } from './supabase';\nimport Notiflix from 'notiflix';\nexport const deleteTest = async testId => {\n  try {\n    const { data: attempts, error: attemptsError } = await supabase\n      .from('test_attempts')\n      .select('id')\n      .eq('test_id', testId);\n\n    if (attemptsError) throw attemptsError;\n\n    const attemptIds = attempts.map(a => a.id);\n\n    if (attemptIds.length > 0) {\n      await supabase.from('question_answers').delete().in('attempt_id', attemptIds);\n      await supabase.from('test_attempts').delete().eq('test_id', testId);\n    }\n\n    const { data: questions, error: questionsError } = await supabase\n      .from('questions')\n      .select('id')\n      .eq('test_id', testId);\n\n    if (questionsError) throw questionsError;\n\n    const questionIds = questions.map(q => q.id);\n\n    if (questionIds.length > 0) {\n      await supabase.from('answers').delete().in('question_id', questionIds);\n      await supabase.from('questions').delete().eq('test_id', testId);\n    }\n    await supabase.from('tests').delete().eq('id', testId);\n    Notiflix.Notify.success('Тест был успешно удалён');\n    window.location.reload()\n  } catch (error) {\n    Notiflix.Notify.failure(`Ошибка при удалении теста: ${error.message}`);\n  }\n};"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$jMsY1","$kcAQ0","$c1391a13c718eeda$export$36be7b3713d792c7","sortType","tests","Array","from","document","querySelectorAll","sort","b","aValue","bValue","Date","getAttribute","getTime","querySelector","textContent","toLowerCase","localeCompare","parseInt","split","testList","innerHTML","forEach","test","appendChild","$nuyhG","$5a6Bh","$d56ecc719ccee681$export$4bf293941e646ec1","testId","data","attempts","error","attemptsError","supabase","select","eq","attemptIds","map","length","delete","in","questions","questionsError","questionIds","q","Notify","success","location","reload","failure","message","$63fb39a13cad62be$var$refs","target","$63fb39a13cad62be$var$currentPage","$63fb39a13cad62be$var$hasMore","$63fb39a13cad62be$var$observer","IntersectionObserver","$63fb39a13cad62be$var$onLoad","root","rootMargin","threshold","entries","entry","isIntersecting","loadTests","insertAdjacentHTML","$63fb39a13cad62be$var$createCatalogMarkup","$63fb39a13cad62be$var$sortSelect","value","$63fb39a13cad62be$var$createDropdownMenu","unobserve","console","$63fb39a13cad62be$var$onMenuButtonClick","evt","stopPropagation","menu","classList","remove","menuContainer","parentElement","toggle","button","addEventListener","title","description","count_questions","completed","created_at","timeSince","join","closest","observe","getElementById","event","deleteTest"],"version":3,"file":"Questionary-builder-final.99ffaf2e.js.map"}